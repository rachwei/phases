{"ast":null,"code":"var _jsxFileName = \"/Users/rachaelwei/Desktop/code/phase/phase-frontend/src/components/Form.tsx\",\n  _s = $RefreshSig$();\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => console.log(data);\n  console.log(watch(\"link\")); // watch input value by passing the name of it\n\n  return (\n    /*#__PURE__*/\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        defaultValue: \"\",\n        ...register(\"link\", {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), errors.link && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"This field is required!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ...register(\"notes\", {\n          required: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(Form, \"+LcrTzTax1ndAePIwZBfPwbnP68=\", false, function () {\n  return [useForm];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useForm","jsxDEV","_jsxDEV","Form","_s","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","children","defaultValue","required","fileName","_jsxFileName","lineNumber","columnNumber","link","type","_c","$RefreshReg$"],"sources":["/Users/rachaelwei/Desktop/code/phase/phase-frontend/src/components/Form.tsx"],"sourcesContent":["import { useForm, SubmitHandler } from \"react-hook-form\"\n\ntype Inputs = {\n    link: string\n    notes: string\n}\n\nexport default function Form() {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm<Inputs>()\n  \n  const onSubmit: SubmitHandler<Inputs> = (data) => console.log(data)\n\n  console.log(watch(\"link\")) // watch input value by passing the name of it\n\n  return (\n    /* \"handleSubmit\" will validate your inputs before invoking \"onSubmit\" */\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input defaultValue=\"\" {...register(\"link\", {required: true})} />\n      {errors.link && <span>This field is required!</span>}\n\n      <input {...register(\"notes\", { required: false })} />\n\n      <input type=\"submit\" />\n    </form>\n  )\n}"],"mappings":";;AAAA,SAASA,OAAO,QAAuB,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOxD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,KAAK;IACLC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGT,OAAO,CAAS,CAAC;EAErB,MAAMU,QAA+B,GAAIC,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAEnEC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC,MAAM,CAAC,CAAC,EAAC;;EAE3B;IAAA;IACE;IACAL,OAAA;MAAMQ,QAAQ,EAAEJ,YAAY,CAACI,QAAQ,CAAE;MAAAI,QAAA,gBACrCZ,OAAA;QAAOa,YAAY,EAAC,EAAE;QAAA,GAAKV,QAAQ,CAAC,MAAM,EAAE;UAACW,QAAQ,EAAE;QAAI,CAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAChEX,MAAM,CAACY,IAAI,iBAAInB,OAAA;QAAAY,QAAA,EAAM;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAEpDlB,OAAA;QAAA,GAAWG,QAAQ,CAAC,OAAO,EAAE;UAAEW,QAAQ,EAAE;QAAM,CAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAErDlB,OAAA;QAAOoB,IAAI,EAAC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;AAEX;AAAChB,EAAA,CAvBuBD,IAAI;EAAA,QAMtBH,OAAO;AAAA;AAAAuB,EAAA,GANWpB,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}